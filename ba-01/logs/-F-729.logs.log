do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=624.242112, duration=0.000264883041382
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.59876251221e-05
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000204086303711
executed snippet estimated_duration=4.0, duration=0.00133204460144
Script duration 624.0
Run total estimated duration= 625.000
run duration: 0:10:25
doing event level: 2
21:52:57 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4739110096
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-F-729
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-F-729
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
21:52:57 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1,L2, signals=0.00696,-0.31633,0.02740,-0.23054,-0.14377,0.16727
21:52:57 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
21:52:57 -- ******* Pre Extraction Check Passed *******
=================================================================================
21:52:57 -- stopping status monitor
stop 4711001840
Status monitor stopped
Status monitor finished
21:53:01 -- starting status monitor
start 4711001840
StatusMonitor period=3. Frequencies(state=1, checksum=3, lock=5, owner=5)
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
start extraction
no extraction script
21:53:06 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetZSymmetry 3.35 ===>> OK
SetExtractionLens 63.57 ===>> OK
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.718732832815
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.7649 3.8417 3.9217 4.0046 4.1079 4.0934
Ar39     3.6905 3.7663 3.8448 3.9291 4.0272 4.0124
Ar36     3.4642 3.5356 3.6092 3.6866 3.7908 3.7664
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.35
GetParameter Trap Current Readback ===>> 248.047427211133
GetHighVoltage ===>> 9900
start measurement
do measurement
L#=ba-01-F analysis type=blank_air
Measurement Started felix_analysis400_120.py
21:53:06 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from not run to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 63.57
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.35
GetZFocus ===>> 1.65
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.97476
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
GetParameter Trap Current Readback ===>> 248.047427211133
GetParameter Source Current Readback ===>> 871.747421107245
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/dc/fd7b28-0bbf-4990-a24c-d4e25f32bb7b.h5
flush and close file /Users/obama/PychronDev/data/isotopes/dc/fd7b28-0bbf-4990-a24c-d4e25f32bb7b.h5
testing...
no interpolation path defined
executed snippet estimated_duration=639.842112, duration=0.000220060348511
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.56720193e-04   9.47812314e-02   3.87234975e-01]
H2 map mass to dac 39.9624 >> 3.76494
GetHighVoltage ===>> 9900
positioning Ar40 (3.76494) on H2
setting magnet DAC
current  : 3.764940
requested: 3.764940
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
SetMagnetDAC 3.76494 ===>> OK
set_dac. change=False
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 15.0}
Equilibration Started
21:53:07 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
update switch state V False args=() kw={} ncanvase=2
21:53:07 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetIndicatorState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=2
21:53:10 -- OPEN   VALVE-H (Felix Inlet)
set_time_zero () {}
equilibrating for 15.0sec
sniff (15.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) u'' table H2
add group /sniff/Ar39 (Group) u'' table H1
add group /sniff/Ar38 (Group) u'' table AX
add group /sniff/Ar37 (Group) u'' table L1
add group /sniff/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/dc/fd7b28-0bbf-4990-a24c-d4e25f32bb7b.h5
measuring sniff. ncounts=15.0
starting measurement
flush and close file /Users/obama/PychronDev/data/isotopes/dc/fd7b28-0bbf-4990-a24c-d4e25f32bb7b.h5
_execute: Traceback (most recent call last):
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 360, in execute_snippet
    func(*argv)
  File "<string>", line 64, in main
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 135, in decorator
    return func(obj, *args, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/measurement_pyscript.py", line 169, in sniff
    series=self._series_count, block=block):
  File "/Users/obama/Programming/git/pychron_dev/pychron/pyscripts/measurement_pyscript.py", line 883, in _automated_run_call
    return func(*args, **kw)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/automated_run.py", line 384, in py_sniff
    return self._sniff(ncounts, starttime, starttime_offset, series)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/automated_run.py", line 2213, in _sniff
    check_conditionals, sc)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/automated_run.py", line 2274, in _measure
    m.measure()
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 114, in measure
    self._measure(evt)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 152, in _measure
    if not self._iter(i):
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 179, in _iter
    if not self._iter_hook(i):
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/multi_collector.py", line 37, in _iter_hook
    return self._iteration(i)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 215, in _iteration
    self._plot_data(i, x, k, s)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 379, in _plot_data
    self._plot_data_(i, x, keys, signals)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 299, in _plot_data_
    self._set_plot_data(cnt, det.isotope, det.name, x, signal)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 362, in _set_plot_data
    update_graph(graph, pid, fit, self.series_idx, self.fit_series_idx)
  File "/Users/obama/Programming/git/pychron_dev/pychron/experiment/automated_run/data_collector.py", line 356, in update_graph
    ypadding='0.1')
  File "/Users/obama/Programming/git/pychron_dev/pychron/graph/graph.py", line 976, in add_datum
    print 'adding datum', plotid, series, self.series[plotid]
TypeError: list indices must be integers, not NoneType

Post Equilibration Started felix_pump_extraction_line.py
Post Measurement Started felix_pump_ms.py
21:53:11 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
21:53:11 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
testing...
calculate duration
no interpolation path defined
testing...
executed snippet estimated_duration=0, duration=4.29153442383e-05
no interpolation path defined
Pumping spectrometer
executed snippet estimated_duration=4.0, duration=0.000248908996582
executed snippet estimated_duration=4.0, duration=0.00647306442261
open () {'name': 'V'}
Pump after analysis
open name=V desc=---
doing GOSUB
checking ownership. requestor=129.138.12.137
testing...
check software interlocks V
no interpolation path defined
interlocks []
executed snippet estimated_duration=4.0, duration=0.000286817550659
actuate state mode=None-script, software_lock=False
Pump Bone
doing actuation None-script open_channel True
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Open V ===>> OK
Close H ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=2
21:53:11 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open V () result=[(True, True)]
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=2
21:53:11 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.466915845871
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
21:53:11 -- ******* Post Measurement Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
21:53:11 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
21:53:11 -- Automated run ba-01-F-729 failed duration: 14.340 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/obama/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
