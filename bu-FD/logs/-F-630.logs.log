do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=624.242112, duration=0.000287055969238
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.00407409668e-05
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000102996826172
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.59876251221e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=42.0, duration=0.000123977661133
executed snippet estimated_duration=42.0, duration=0.00390601158142
script duration name:diode seconds:42.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000230073928833
executed snippet estimated_duration=4.0, duration=0.00156402587891
Script duration 666.0
Run total estimated duration= 667.000
run duration: 0:11:07
doing event level: 2
15:44:56 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4737724688
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FD-F-630
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FD-F-630
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
15:44:57 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1,L2, signals=0.00324,-0.27133,-0.07546,-0.15878,-0.63564,-0.17714
15:44:57 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:44:57 -- ******* Pre Extraction Check Passed *******
=================================================================================
15:44:57 -- stopping status monitor
stop 4710473456
Status monitor stopped
15:45:02 -- starting status monitor
start 4710473456
StatusMonitor period=3. Frequencies(state=1, checksum=3, lock=5, owner=5)
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
start extraction
do extraction
Analysis started at 15:45:06.631084
Extraction Started felix_diode.py
15:45:06 -- ******* Extraction Started felix_diode.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x11b8789b0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=42.0, duration=0.000156879425049
executed snippet estimated_duration=362.0, duration=0.00842189788818
Felix unknown laser analysis
set_motor ('beam', '') {}
setting motor "beam" to 
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000104904174805
Prepare for Diode Analysis
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
15:45:06 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Felix Ion Pump'}
open name=--- desc=Felix Ion Pump
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=3
15:45:07 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open None (Felix Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=3
15:45:07 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=3
15:45:08 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Bone to CO2 Laser'}
close name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close D ===>> OK
GetIndicatorState D ===>> False
change switch state (True, True)
update switch state D False args=() kw={} ncanvase=3
15:45:08 -- CLOSE  VALVE-D (Bone to CO2 Laser)
-------------------------- close None (Bone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
open name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=3
15:45:09 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open None (Bone to Diode Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=2.87867307663
PrepareForDiodeAnalysis.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.50611114502e-05
Isolate coldfinger
close () {'name': 'B', 'description': 'Bone to Diode Laser'}
close name=B desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState B ===>> False
change switch state (True, True)
update switch state B False args=() kw={} ncanvase=3
15:45:09 -- CLOSE  VALVE-B (Bone to Diode Laser)
-------------------------- close B (Bone to Diode Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.488965988159
IsolateDiodeColdfinger.py completed successfully
gosub finished
open () {'description': 'Bone to Turbo'}
open name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=3
15:45:10 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
Blank Analyis. No laser heating
sleep (40.0,) {}
SLEEP 40.0
block started
WaitControl setup for 40.0  
Join finished
block finished. duration 40.1068091393
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=42.0, duration=0.000121116638184
Equilibrate then isolate coldfinger
close () {'name': 'C', 'description': 'Bone to Turbo'}
close name=C desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close C ===>> OK
GetIndicatorState C ===>> False
change switch state (True, True)
update switch state C False args=() kw={} ncanvase=3
15:45:50 -- CLOSE  VALVE-C (Bone to Turbo)
-------------------------- close C (Bone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'name': 'B', 'description': 'Bone to Diode Laser'}
open name=B desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=3
15:45:52 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open B (Bone to Diode Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (20,) {}
SLEEP 20.0
block started
WaitControl setup for 20.0  
Join finished
block finished. duration 20.0659148693
close () {'name': 'B', 'description': 'Bone to Diode Laser'}
close name=B desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
GetIndicatorState B ===>> False
change switch state (True, True)
update switch state B False args=() kw={} ncanvase=3
15:46:12 -- CLOSE  VALVE-B (Bone to Diode Laser)
-------------------------- close B (Bone to Diode Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=63.0, duration=22.4035639763
EquilibrateThenIsolateDiodeColdfinger.py completed successfully
gosub finished
sleep (120.0,) {}
SLEEP 120.0
block started
WaitControl setup for 120.0  
Join finished
block finished. duration 120.177963972
executed snippet estimated_duration=522.0, duration=186.513915062
felix_diode.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> ,q[178]N[00][00][00][00][192][248]7>[00][00][250]D9[212][11]@[00][00][250]D-i[134]@[00][00][250]D...
GetOutputBlob ===>> ,q[178]N[00][00][00][00][192][248]7>[169][176][229]A9[212][11]@[00][00][00][00]-i[134]@[00][00][0...
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 1
Extraction Finished
15:48:13 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
15:48:13 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 1.65 ===>> OK
SetHV 9900.0 ===>> OK
SetZSymmetry 3.35 ===>> OK
SetExtractionLens 63.57 ===>> OK
SetIonRepeller -5.15 ===>> OK
SetElectronEnergy 125.02 ===>> OK
SetYSymmetry 38.07 ===>> OK
send trap current 250.0
GetParameter Trap Current Readback ===>> 248.830617103095
SetParameter Trap Current Set,250.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.7651 3.8418 3.9219 4.0048 4.1081 4.0936
Ar39     3.6907 3.7665 3.8449 3.9293 4.0274 4.0126
Ar36     3.4643 3.5357 3.6094 3.6867 3.7910 3.7665
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.35
GetParameter Trap Current Readback ===>> 248.047427211133
GetHighVoltage ===>> 9900
start measurement
do measurement
L#=bu-FD-F analysis type=blank_unknown
Measurement Started felix_analysis400_120.py
15:48:13 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 63.57
GetYSymmetry ===>> 38.07
GetZSymmetry ===>> 3.35
GetZFocus ===>> 1.65
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.97476
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
GetParameter Trap Current Readback ===>> 248.047427211133
GetParameter Source Current Readback ===>> 881.601110907648
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
flush and close file /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
testing...
no interpolation path defined
executed snippet estimated_duration=650.242112, duration=0.000257968902588
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.56720193e-04   9.47812314e-02   3.87394975e-01]
H2 map mass to dac 39.9624 >> 3.7651
GetHighVoltage ===>> 9900
positioning Ar40 (3.7651) on H2
setting magnet DAC
current  : 3.765096
requested: 3.765100
Delta Dac: 0.000004
Checking detector protection. dv=0.00000
SetMagnetDAC 3.7651 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 25.0}
Equilibration Started
15:48:14 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1205b7590>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x121a06650>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x124284530>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
update switch state V False args=() kw={} ncanvase=3
15:48:14 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetIndicatorState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=3
15:48:17 -- OPEN   VALVE-H (Felix Inlet)
set_time_zero () {}
equilibrating for 25.0sec
sniff (25.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) u'' table H2
add group /sniff/Ar39 (Group) u'' table H1
add group /sniff/Ar38 (Group) u'' table AX
add group /sniff/Ar37 (Group) u'' table L1
add group /sniff/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
measuring sniff. ncounts=25.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
set states for children of O. state=True
handle state [('O', True)]
update switch state O True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
Equilibration Finished
15:48:42 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
15:48:43 -- CLOSE  VALVE-H (Felix Inlet)
Post Equilibration Started felix_pump_extraction_line.py
15:48:43 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000264167785645
executed snippet estimated_duration=4.0, duration=0.00714898109436
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000259876251221
Pump Bone
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=3
15:48:43 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
15:48:43 -- collecting point 25
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
close name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
waiting for write to finish
measurement finished
estimated time: 26.214 actual time: :26.336
flush and close file /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
checking ownership. requestor=129.138.12.137
set "Ar39" to "('Parabolic', 'SEM')"
check software interlocks G
set_baseline_fits () {}
interlocks []
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Bone to Turbo'}
set "H2" to "('average', 'SEM')"
open name=--- desc=Bone to Turbo
set "L2(CDD)" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
checking ownership. requestor=129.138.12.137
multicollect () {'integration_time': 1.048576, 'ncounts': 400}
check software interlocks C
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
add group /signal/Ar40 (Group) u'' table H2
add group /signal/Ar39 (Group) u'' table H1
add group /signal/Ar38 (Group) u'' table AX
add group /signal/Ar37 (Group) u'' table L1
add group /signal/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
measuring signal. ncounts=400
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=3
15:48:44 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
starting measurement
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=3
15:48:45 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
open name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=3
15:48:45 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open None (Bone to Diode Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
open name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open D ===>> OK
GetIndicatorState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=3
15:48:46 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open None (Bone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=4.44556999207
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 0
Get Resource Value FelixMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=4.51286196709
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
15:48:47 -- ******* Post Equilibration Finished *******
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:49:10 -- collecting point 25
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:49:36 -- collecting point 50
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
set states for children of U. state=False
handle state [('U', False)]
update switch state U False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:50:03 -- collecting point 75
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:50:29 -- collecting point 100
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:50:55 -- collecting point 125
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
set states for children of U. state=True
handle state [('U', True)]
update switch state U True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:51:21 -- collecting point 150
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:51:48 -- collecting point 175
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
len selected runs 1
cloning run a-01-F-00. set_labnumber=True, set_position=True
labnumber changed old:, new:a-01-F
using cached meta values for a-01-F
clear labnumber
labnumber changed old:a-01-F, new:
clear labnumber
close session 4737724688
clear labnumber
clear labnumber
close session 4737724688
name=Extraction, new=air_x2, suppress=True
calculating time of run a-01-F-00
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
len selected runs 1
cloning run 65609-01. set_labnumber=True, set_position=True
labnumber changed old:, new:65609
using cached meta values for 65609
clear labnumber
labnumber changed old:65609, new:
clear labnumber
clear labnumber
close session 4737724688
matched Position to 11
name=Extraction, new=diode, suppress=True
calculating time of run 65609-01
SSSSSSSSSSSSSS set AR scroll to 1
update runs
15:52:14 -- collecting point 200
SSSSSSSSSSSSSS set AR scroll to 1
update runs
len selected runs 1
cloning run 65609-01. set_labnumber=True, set_position=True
labnumber changed old:, new:65609
using cached meta values for 65609
matched Position to 11
calculating time of run 65609-01
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=624.242112, duration=0.000221014022827
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.60012054443e-05
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.69820404053e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000155925750732
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000118017196655
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000142097473145
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=8.70227813721e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000100135803223
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000144958496094
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.98973846436e-05
executed snippet estimated_duration=174.0, duration=0.0102510452271
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000227928161621
executed snippet estimated_duration=4.0, duration=0.00149393081665
analysis400_120 in script context. using previous estimated duration
pump_ms in script context. using previous estimated duration
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000103950500488
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.69412994385e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=42.0, duration=0.000135898590088
executed snippet estimated_duration=42.0, duration=0.00412893295288
pump_extraction_line in script context. using previous estimated duration
diode in script context. using previous estimated duration
air_x2 in script context. using previous estimated duration
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_cocktail_x3.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.19888305664e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000157117843628
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000118970870972
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000149965286255
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=8.08238983154e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000101804733276
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000144004821777
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000103950500488
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00014591217041
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000104904174805
executed snippet estimated_duration=244.0, duration=0.0133368968964
cocktail_x3 in script context. using previous estimated duration
check queue disabled
saving experiment to /Users/obama/PychronDev/experiments/CurrentExperiment.txt
setting executable True
queues saved
Queue modified. Reset run generator
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:52:40 -- collecting point 225
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:53:06 -- collecting point 250
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:53:33 -- collecting point 275
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Autosaving to /Users/obama/PychronDev/experiments/auto_save/CurrentExperiment.bak
use git repo changed False
window opened
opening pyscript: /Users/obama/PychronDev/scripts/measurement/felix_analysis400_120.py
reload canvas
15:53:56 -- reloading canvas scene
refresh network
handle state ('FA', True, False)
update switch state FA True args=(False,) kw={} ncanvase=3
handle state ('FB', True, False)
update switch state FB True args=(False,) kw={} ncanvase=3
handle state ('FC', True, False)
update switch state FC True args=(False,) kw={} ncanvase=3
handle state ('FD', True, False)
update switch state FD True args=(False,) kw={} ncanvase=3
handle state ('FH', True, False)
update switch state FH True args=(False,) kw={} ncanvase=3
handle state ('A', True, False)
update switch state A True args=(False,) kw={} ncanvase=3
handle state ('C', True, False)
update switch state C True args=(False,) kw={} ncanvase=3
handle state ('B', True, False)
update switch state B True args=(False,) kw={} ncanvase=3
handle state ('E', False, False)
update switch state E False args=(False,) kw={} ncanvase=3
handle state ('D', True, False)
update switch state D True args=(False,) kw={} ncanvase=3
handle state ('G', False, False)
update switch state G False args=(False,) kw={} ncanvase=3
handle state ('F', False, False)
update switch state F False args=(False,) kw={} ncanvase=3
handle state ('I', True, False)
update switch state I True args=(False,) kw={} ncanvase=3
handle state ('H', False, False)
update switch state H False args=(False,) kw={} ncanvase=3
handle state ('K', True, False)
update switch state K True args=(False,) kw={} ncanvase=3
handle state ('J', False, False)
update switch state J False args=(False,) kw={} ncanvase=3
handle state ('M', True, False)
update switch state M True args=(False,) kw={} ncanvase=3
handle state ('L', False, False)
update switch state L False args=(False,) kw={} ncanvase=3
handle state ('O', False, False)
update switch state O False args=(False,) kw={} ncanvase=3
handle state ('N', True, False)
update switch state N True args=(False,) kw={} ncanvase=3
handle state ('Q', True, False)
update switch state Q True args=(False,) kw={} ncanvase=3
handle state ('P', True, False)
update switch state P True args=(False,) kw={} ncanvase=3
handle state ('S', True, False)
update switch state S True args=(False,) kw={} ncanvase=3
handle state ('R', False, False)
update switch state R False args=(False,) kw={} ncanvase=3
handle state ('U', True, False)
update switch state U True args=(False,) kw={} ncanvase=3
handle state ('T', True, False)
update switch state T True args=(False,) kw={} ncanvase=3
handle state ('W', False, False)
update switch state W False args=(False,) kw={} ncanvase=3
handle state ('V', False, False)
update switch state V False args=(False,) kw={} ncanvase=3
handle state ('Y', False, False)
update switch state Y False args=(False,) kw={} ncanvase=3
handle state ('X', False, False)
update switch state X False args=(False,) kw={} ncanvase=3
handle state ('Z', False, False)
update switch state Z False args=(False,) kw={} ncanvase=3
refresh_canvas_needed fired
loaded current shot count 4790 time:2017-06-08 12:44:30
loaded current shot count 3645 time:2017-06-07 11:26:31
15:53:57 -- starting status monitor
start 4710473456
Monitor already running
15:53:59 -- collecting point 300
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:54:25 -- collecting point 325
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:54:52 -- collecting point 350
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:55:01 -- stopping status monitor
stop 4710473456
Status monitor stopped
Status monitor finished
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
refresh_lock_state fired. ('FA', False)
refresh_lock_state fired. ('FB', False)
refresh_lock_state fired. ('FC', False)
refresh_lock_state fired. ('FD', False)
refresh_lock_state fired. ('FH', False)
refresh_lock_state fired. ('A', False)
refresh_lock_state fired. ('C', False)
refresh_lock_state fired. ('B', False)
refresh_lock_state fired. ('E', False)
refresh_lock_state fired. ('D', False)
refresh_lock_state fired. ('G', True)
refresh_lock_state fired. ('F', True)
refresh_lock_state fired. ('I', False)
refresh_lock_state fired. ('H', False)
refresh_lock_state fired. ('K', False)
refresh_lock_state fired. ('J', True)
refresh_lock_state fired. ('M', False)
refresh_lock_state fired. ('L', False)
refresh_lock_state fired. ('O', False)
refresh_lock_state fired. ('N', False)
refresh_lock_state fired. ('Q', False)
refresh_lock_state fired. ('P', False)
refresh_lock_state fired. ('S', False)
refresh_lock_state fired. ('R', False)
refresh_lock_state fired. ('U', False)
refresh_lock_state fired. ('T', False)
refresh_lock_state fired. ('W', False)
refresh_lock_state fired. ('V', False)
refresh_lock_state fired. ('Y', False)
refresh_lock_state fired. ('X', False)
refresh_lock_state fired. ('Z', False)
refresh_canvas_needed fired
window opened
load scan settings
reset scan timer
detector changed Detector(H2)
isotope not set isotope=Ar40. Not setting magnet
isotope changed Ar40
set position Ar40 on Detector(H2)
set position Ar40 on Detector(H2)
detector Detector(H2)
detector Detector(H2)
POSITION Ar40 H2
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.56720193e-04   9.47812314e-02   3.87394975e-01]
H2 map mass to dac 39.9624 >> 3.7651
H2 map mass coeffs = [ -2.56720193e-04   9.47812314e-02   3.87394975e-01]
H2 map mass to dac 39.9624 >> 3.7651
GetHighVoltage ===>> 9900
positioning Ar40 (3.7651) on H2
setting magnet DAC
current  : 3.765100
requested: 3.765100
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
GetHighVoltage ===>> 9900
positioning Ar40 (3.7651) on H2
setting magnet DAC
current  : 3.765100
requested: 3.765100
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
SetMagnetDAC 3.7651 ===>> OK
set_dac. change=False
update magnet dac_changed,<undefined>,True
SetMagnetDAC 3.7651 ===>> OK
set_dac. change=False
update magnet dac_changed,<undefined>,True
setting isotope: Ar40
setting isotope: Ar40
reload canvas
15:55:13 -- reloading canvas scene
refresh network
handle state ('FA', True, False)
update switch state FA True args=(False,) kw={} ncanvase=4
handle state ('FB', True, False)
update switch state FB True args=(False,) kw={} ncanvase=4
handle state ('FC', True, False)
update switch state FC True args=(False,) kw={} ncanvase=4
handle state ('FD', True, False)
update switch state FD True args=(False,) kw={} ncanvase=4
handle state ('FH', True, False)
update switch state FH True args=(False,) kw={} ncanvase=4
handle state ('A', True, False)
update switch state A True args=(False,) kw={} ncanvase=4
handle state ('C', True, False)
update switch state C True args=(False,) kw={} ncanvase=4
handle state ('B', True, False)
update switch state B True args=(False,) kw={} ncanvase=4
handle state ('E', False, False)
update switch state E False args=(False,) kw={} ncanvase=4
handle state ('D', True, False)
update switch state D True args=(False,) kw={} ncanvase=4
handle state ('G', False, False)
update switch state G False args=(False,) kw={} ncanvase=4
handle state ('F', False, False)
update switch state F False args=(False,) kw={} ncanvase=4
handle state ('I', True, False)
update switch state I True args=(False,) kw={} ncanvase=4
handle state ('H', False, False)
update switch state H False args=(False,) kw={} ncanvase=4
handle state ('K', True, False)
update switch state K True args=(False,) kw={} ncanvase=4
handle state ('J', False, False)
update switch state J False args=(False,) kw={} ncanvase=4
handle state ('M', True, False)
update switch state M True args=(False,) kw={} ncanvase=4
handle state ('L', False, False)
update switch state L False args=(False,) kw={} ncanvase=4
handle state ('O', False, False)
update switch state O False args=(False,) kw={} ncanvase=4
handle state ('N', True, False)
update switch state N True args=(False,) kw={} ncanvase=4
handle state ('Q', True, False)
update switch state Q True args=(False,) kw={} ncanvase=4
handle state ('P', True, False)
update switch state P True args=(False,) kw={} ncanvase=4
handle state ('S', True, False)
update switch state S True args=(False,) kw={} ncanvase=4
handle state ('R', False, False)
update switch state R False args=(False,) kw={} ncanvase=4
handle state ('U', True, False)
update switch state U True args=(False,) kw={} ncanvase=4
handle state ('T', True, False)
update switch state T True args=(False,) kw={} ncanvase=4
handle state ('W', False, False)
update switch state W False args=(False,) kw={} ncanvase=4
handle state ('V', False, False)
update switch state V False args=(False,) kw={} ncanvase=4
handle state ('Y', False, False)
update switch state Y False args=(False,) kw={} ncanvase=4
handle state ('X', False, False)
update switch state X False args=(False,) kw={} ncanvase=4
handle state ('Z', False, False)
update switch state Z False args=(False,) kw={} ncanvase=4
refresh_canvas_needed fired
loaded current shot count 4790 time:2017-06-08 12:44:30
loaded current shot count 3645 time:2017-06-07 11:26:31
15:55:15 -- starting status monitor
start 4710473456
StatusMonitor period=3. Frequencies(state=1, checksum=3, lock=5, owner=5)
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:55:18 -- collecting point 375
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
setup peak center. detector=None, isotope=None
ask user for peak center configuration
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x11f974e90>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x1224e2590>]
set states for children of O. state=True
handle state [('O', True)]
update switch state O True args=() kw={'refresh': False} ncanvase=4
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:55:44 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.555
flush and close file /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
baselines () {'settling_time': 15.0, 'detector': 'H2', 'mass': 39.862, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
detector Detector(H2)
POSITION 39.862 H2
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.56720193e-04   9.47812314e-02   3.87394975e-01]
H2 map mass to dac 39.862 >> 3.75764141492
GetHighVoltage ===>> 9900
positioning 39.862 (3.75764141492) on H2
setting magnet DAC
current  : 3.765100
requested: 3.757641
Delta Dac: 0.007459
Checking detector protection. dv=0.00746
SetMagnetDAC 3.75764141492 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update magnet dac_changed,<undefined>,True
Delaying 15.0s for detectors to settle
setting isotope: Ar40
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:56:27 -- collecting point 25
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
dump scan settings
stopping scan timer
dump scan settings
stopping scan timer
15:56:48 -- stopping status monitor
stop 4710473456
Status monitor stopped
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
Status monitor finished
15:56:53 -- collecting point 50
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:57:19 -- collecting point 75
Autosaving to /Users/obama/PychronDev/experiments/auto_save/CurrentExperiment.bak
use git repo changed False
window opened
opening pyscript: /Users/obama/PychronDev/scripts/measurement/felix_analysis400_120.py
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
reload canvas
15:57:31 -- reloading canvas scene
refresh network
handle state ('FA', True, False)
update switch state FA True args=(False,) kw={} ncanvase=4
handle state ('FB', True, False)
update switch state FB True args=(False,) kw={} ncanvase=4
handle state ('FC', True, False)
update switch state FC True args=(False,) kw={} ncanvase=4
handle state ('FD', True, False)
update switch state FD True args=(False,) kw={} ncanvase=4
handle state ('FH', True, False)
update switch state FH True args=(False,) kw={} ncanvase=4
handle state ('A', True, False)
update switch state A True args=(False,) kw={} ncanvase=4
handle state ('C', True, False)
update switch state C True args=(False,) kw={} ncanvase=4
handle state ('B', True, False)
update switch state B True args=(False,) kw={} ncanvase=4
handle state ('E', False, False)
update switch state E False args=(False,) kw={} ncanvase=4
handle state ('D', True, False)
update switch state D True args=(False,) kw={} ncanvase=4
handle state ('G', False, False)
update switch state G False args=(False,) kw={} ncanvase=4
handle state ('F', False, False)
update switch state F False args=(False,) kw={} ncanvase=4
handle state ('I', True, False)
update switch state I True args=(False,) kw={} ncanvase=4
handle state ('H', False, False)
update switch state H False args=(False,) kw={} ncanvase=4
handle state ('K', True, False)
update switch state K True args=(False,) kw={} ncanvase=4
handle state ('J', False, False)
update switch state J False args=(False,) kw={} ncanvase=4
handle state ('M', True, False)
update switch state M True args=(False,) kw={} ncanvase=4
handle state ('L', False, False)
update switch state L False args=(False,) kw={} ncanvase=4
handle state ('O', True, False)
update switch state O True args=(False,) kw={} ncanvase=4
handle state ('N', True, False)
update switch state N True args=(False,) kw={} ncanvase=4
handle state ('Q', True, False)
update switch state Q True args=(False,) kw={} ncanvase=4
handle state ('P', True, False)
update switch state P True args=(False,) kw={} ncanvase=4
handle state ('S', True, False)
update switch state S True args=(False,) kw={} ncanvase=4
handle state ('R', False, False)
update switch state R False args=(False,) kw={} ncanvase=4
handle state ('U', True, False)
update switch state U True args=(False,) kw={} ncanvase=4
handle state ('T', True, False)
update switch state T True args=(False,) kw={} ncanvase=4
handle state ('W', False, False)
update switch state W False args=(False,) kw={} ncanvase=4
handle state ('V', False, False)
update switch state V False args=(False,) kw={} ncanvase=4
handle state ('Y', False, False)
update switch state Y False args=(False,) kw={} ncanvase=4
handle state ('X', False, False)
update switch state X False args=(False,) kw={} ncanvase=4
handle state ('Z', False, False)
update switch state Z False args=(False,) kw={} ncanvase=4
refresh_canvas_needed fired
loaded current shot count 4790 time:2017-06-08 12:44:30
loaded current shot count 3645 time:2017-06-07 11:26:31
set states for children of U. state=False
15:57:33 -- starting status monitor
start 4710473456
StatusMonitor period=3. Frequencies(state=1, checksum=3, lock=5, owner=5)
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:57:46 -- collecting point 100
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:58:03 -- stopping status monitor
stop 4710473456
Status monitor stopped
Status monitor finished
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.140
flush and close file /Users/obama/PychronDev/data/isotopes/b3/e85eee-e8fe-4a00-a2ff-cfb0a31bb885.h5
activate_detectors ('H1', 'L2(CDD)') {'peak_center': True}
peak_center () {'detector': 'H2', 'integration_time': 1.048576, 'isotope': 'Ar40'}
peak center: mean=4.83148024997 threshold=100.0
Skipping peak center. intensities to small. 4.83148024997<100.0
finished measure script
executed snippet estimated_duration=650.242112, duration=594.686335087
felix_analysis400_120.py completed successfully
Measurement Finished
15:58:08 -- ******* Measurement Finished *******
Post Measurement Started felix_pump_ms.py
15:58:08 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.31537628174e-05
Pumping spectrometer
open () {'name': 'V'}
open name=V desc=---
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=4
15:58:08 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open V () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.456403970718
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
15:58:08 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L2(CDD)= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
4871421776 connecting to database sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
create new session 4871421776
close session 4871421776
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4748197968
MassSpec Database Version: 16.0
close session 4748197968
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-FD-F
setting aliquot to 630
setting step to 
setting uuid to b3e85eee-e8fe-4a00-a2ff-cfb0a31bb885
setting irradpos to bu-FD-F
setting extract_device to Fusions Diode
setting tray to 
setting position to 1
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 40.0
setting duration_at_request to 40.0
setting first_stage_delay to 40.0
setting cleanup to 120.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Felix
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
adding new session for Felix
Reference Isotope=Ar40
Reference Detector=H2
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar40 H2
add baseline dbdet= Ar40. original det= H2
get baseline data Ar40 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x120d2cd10> len t=120
baseline Ar40. v=-0.387498698856, e=0.0100915859782
get signal data Ar40 H2
Get data signal Ar40 0.311+/-0.017 len t=400
adding isotope Ar39 H1
add baseline dbdet= Ar39. original det= H1
get baseline data Ar39 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1205bea10> len t=120
baseline Ar39. v=-0.0375871298962, e=0.011294966225
get signal data Ar39 H1
Get data signal Ar39 0.024+/-0.022 len t=400
adding isotope Ar38 AX
add baseline dbdet= Ar38. original det= AX
get baseline data Ar38 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x1205f11d0> len t=120
baseline Ar38. v=-0.0819444790215, e=0.0108103091597
get signal data Ar38 AX
Get data signal Ar38 0.002+/-0.013 len t=400
adding isotope Ar37 L1
add baseline dbdet= Ar37. original det= L1
get baseline data Ar37 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1205f1290> len t=120
baseline Ar37. v=-0.471756094384, e=0.00973224498939
get signal data Ar37 L1
Get data signal Ar37 0.021+/-0.011 len t=400
adding isotope Ar36 L2(CDD)
add baseline dbdet= Ar36. original det= L2(CDD)
get baseline data Ar36 L2(CDD)
Get data baseline <pychron.processing.isotope.Baseline object at 0x1205f17d0> len t=120
baseline Ar36. v=0.0, e=0.0
get signal data Ar36 L2(CDD)
Get data signal Ar36 0.00466+/-0.00023 len t=400
bu-FD-F-630 added analysis time 0.677392959595s
analysis added to mass spec database
mass spec save time= 0.690
persistence save - dvc
================= post measurement started
create new session 4709124144
close session 4709124144
add to repo msg=modified - felix_analysis400_120.py
add to repo msg=modified - felix_diode.py
add to repo msg=modified - felix_pump_ms.py
add to repo msg=modified - felix_pump_extraction_line.py
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - 44c6f8761147de90179e8a3952e48831c78a9a46.json
add to repo msg=modified - -F-630.json
add to repo msg=modified - -F-630.dat.json
add to repo msg=modified - -F-630.blan.json
add to repo msg=modified - -F-630.inte.json
add to repo msg=modified - -F-630.icfa.json
add to repo msg=modified - -F-630.base.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/C-Henry/bu-FD/tags/-F-630.tags.json
add to repo msg=modified - -F-630.peak.json
add to repo msg=modified - -F-630.extr.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/C-Henry/bu-FD/monitor/-F-630.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -F-630.inte.json
add to repo msg=modified - -F-630.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -F-630.blan.json
commit message=<BLANKS> preceding 
add to repo msg=modified - -F-630.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x12ef1f710>
pushing to remote=origin, url=https://github.com
Smart pull ahead: 0 behind: 0
Up-to-date with origin
no changes to meta repo
create new session 4709124144
add association C-Henry
get identifier "bu-FD-F"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x13078d390>
close session 4709124144
================= post measurement finished
15:58:21 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
15:58:21 -- ******* Post Run Check Passed *******
15:58:21 -- Automated run bu-FD-F-630 success duration: 805.119 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=bu-FD-F-630, duration=805.119349003, md5=b1de785c
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/obama/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
